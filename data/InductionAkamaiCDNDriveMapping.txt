<script>
    function Config() {
        var config = {
            altCol: {
                'teamSite_SP': {
                    'state': {
                        'click': 0,
                        'keyup': 0
                    },
                    '_config': null,
                    'src': " /data/images/teamSite_SP.png",
                    'width': '40%',
                    'enlargeToWidth': 45,
                    'left': 30
                },
				'GTS_teamSite': {
                    'state': {
                        'click': 0,
                        'keyup': 0
                    },
                    '_config': null,
                    'src': " /data/images/GTS_teamSite.png",
                    'width': '40%',
                    'enlargeToWidth': 45,
                    'left': 30
                },
				'docs1': {
                    'state': {
                        'click': 0,
                        'keyup': 0
                    },
                    '_config': null,
                    'src': "https://maxymiserbpos.sharepoint.com/sites/ua/training/Shared%20Documents/InductionAssets/docs1.png",
                    'width': '40%',
                    'enlargeToWidth': 45,
                    'left': 30
                },
				'openwithEx': {
                    'state': {
                        'click': 0,
                        'keyup': 0
                    },
                    '_config': null,
                    'src': "https://maxymiserbpos.sharepoint.com/sites/ua/training/Shared%20Documents/InductionAssets/openwithEx.png",
                    'width': '40%',
                    'enlargeToWidth': 45,
                    'left': 30
                },
				'Mapping_via': {
                    'state': {
                        'click': 0,
                        'keyup': 0
                    },
                    '_config': null,
                    'src': "https://maxymiserbpos.sharepoint.com/sites/ua/training/Shared%20Documents/InductionAssets/Mapping_via.png",
                    'width': '40%',
                    'enlargeToWidth': 45,
                    'left': 30
                }
            },

            getter: function(alt, _config, src, width, enlargeToWidth, left) {
                if (_config && alt) {
                    return config.altCol[alt] && config.altCol[alt]['_config'] ? config.altCol[alt]['_config'] : null; 
                } else if (!_config && alt && !src && !width && !enlargeToWidth && !left) {
                    if (config.altCol[alt]) {
                        return config.altCol[alt] && config.altCol[alt]['state'] ? config.altCol[alt]['state'] : null; 
                    } else {
                        return false;
                    }
                } else if (!arguments.length) {
                    return Object.keys(config.altCol);
                } else if (alt && src) {
                    return config.altCol[alt] && config.altCol[alt]['src'] ? config.altCol[alt]['src'] : null;
                } else if (alt && width) {
                    return config.altCol[alt] && config.altCol[alt]['width'] ? config.altCol[alt]['width'] : null;
                } else if (alt && enlargeToWidth) {
                    return config.altCol[alt] && config.altCol[alt]['enlargeToWidth'] ? config.altCol[alt]['enlargeToWidth'] : null; 
                } else if (alt && left) {
                    return config.altCol[alt] && config.altCol[alt]['left'] ? config.altCol[alt]['left']  : null; 
                }
            },

            setter: function(alt, val, _config) {
                if (_config && alt) {
                    !config.altCol[alt]['_config'] ? config.altCol[alt]['_config'] = _config : '';
                } else if (alt && val) {
                    if (({}).toString.call(val) === '[object Object]') {
                        for (var i in val) {
                            config.altCol[alt]['state'][i] = val[i];
                        }
                    }
                }
            },

            domReady: function(callback) {
                config.eventsBinder(document, 'DOMContentLoaded', callback);
                config.eventsBinder(document, 'onreadystatechange', function() {
                    if (document.readyState === 'complete') {
                        callback();
                    }
                });
                config.eventsBinder(window, 'load', callback);
            },

            eventsBinder: function(El, event, handler) {
                if (El && El.addEventListener) {
                    El.addEventListener(event, handler);
                } else if (El && El.attachEvent) {
                    El.attachEvent('on' + event, handler);
                }
            },

            eventsUnbinder: function(El, event, handler) {
                if (El && El.removeEventListener) {
                    El.removeEventListener(event, handler);
                }

                if (El && El.detachEvent) {
                    El.detachEvent('on' + event, handler);
                }
            },

            constructor: function(targetEl, _e, _g, s, _u) {
                var _config = {
                    documentCreateElement: function(El, id, style, text) {
                        var returnable;
                        if (El) {
                            returnable = document.createElement(El);
                            id ? returnable.id = id : '';
                            if (style && ({}).toString.call(style) === '[object Array]') {
                                for (var i = style.length; i--;) {
                                    if (({}).toString.call(style[i]) === '[object Object]') {
                                        for (var j in style[i]) {
                                            returnable.style[j] = style[i][j];
                                        }
                                    }
                                }
                            }

                            if (text && ({}).toString.call(text) === '[object String]') {
                                returnable['innerText' in returnable ? 'innerText' : 'innerHTML'] = text;
                            }
                        }
                        return returnable;
                    },
                    appendOpacityDivToBody: function() {

                        document.body.appendChild(_config.documentCreateElement('div', 'OpacityDivToBody', [{
                            'backgroundColor': '#000'
                        }, {
                            'bottom': '0'
                        }, {
                            'left': '0'
                        }, {
                            'opacity': '0.7'
                        }, {
                            'position': 'fixed'
                        }, {
                            'right': '0'
                        }, {
                            'top': '0'
                        }, {
                            'zIndex': '9999'
                        }]));
                    },

                    scroller: function(e) {
                        var event = window.event || e,
                            delta = event.detail ? event.detail * (-120) : event.wheelDelta,
                            subRoutine = function(d) {
                                var handledImageContainer = document.querySelector('#handledImageContainer');
                                if (d >= 120 && handledImageContainer) {
                                    handledImageContainer.style.width = parseInt(handledImageContainer.style.width.match(/\d+/)) + 1 + '%';
                                }
                                if (d <= -120 && handledImageContainer) {
                                    handledImageContainer.style.width = parseInt(handledImageContainer.style.width.match(/\d+/)) - 1 + '%';
                                }
                            };
                        if (delta && event.ctrlKey) {
                            subRoutine(delta);
                        }
                        return false;
                    },

                    arrowPress: function(e) {
					
                        var event = e || window.event,
                            handledImageContainer = document.querySelector('#handledImageContainer'),
                            leftDefaultValue = handledImageContainer ? _g(handledImageContainer.querySelector('img').alt, '', '', '', '', 1) : null,
                            imageParentNodeEnlargedWidth = handledImageContainer ? _g(handledImageContainer.querySelector('img').alt, '', '', '', 1) : null;

                        switch (event.keyCode.toString()) {

                            case '38':
                                {
                                    handledImageContainer.style.top =
                                        parseInt(handledImageContainer.style.top.match(/[-]?\d+/)) - 1 + '%';
                                    break;
                                }

                            case '40':
                                {
                                    handledImageContainer.style.top =
                                        parseInt(handledImageContainer.style.top.match(/[-]?\d+/)) + 1 + '%';
                                    break;
                                }
                            case '37' || '':
                                {
                                    !handledImageContainer.style.left ||
                                        parseInt(handledImageContainer.style.left.match(/[-]?\d+/)) > leftDefaultValue ?
                                        handledImageContainer.style.left = leftDefaultValue + '%' : handledImageContainer.style.left;
                                    handledImageContainer.style.left = parseInt(handledImageContainer.style.left.match(/[-]?\d+/)) - 1 + '%';
                                    break;
                                }

                            case '39':
                                {
                                    !handledImageContainer.style.left ||
                                        parseInt(handledImageContainer.style.left.match(/[-]?\d+/)) < leftDefaultValue ?
                                        handledImageContainer.style.left = leftDefaultValue + '%' : handledImageContainer.style.left;
                                    handledImageContainer.style.left =
                                        parseInt(handledImageContainer.style.left.match(/[-]?\d+/)) + 1 + '%';
                                    break;
                                }
                            case '48':
                                {
                                    if (event.ctrlKey) {
                                        parseInt(handledImageContainer.style.width.match(/[-]?\d+/)) > imageParentNodeEnlargedWidth ||
                                            parseInt(handledImageContainer.style.width.match(/[-]?\d+/)) < imageParentNodeEnlargedWidth ?
                                            handledImageContainer.style.width = imageParentNodeEnlargedWidth + '%' : '';
                                        parseInt(handledImageContainer.style.left.match(/[-]?\d+/)) !== leftDefaultValue ?
                                            handledImageContainer.style.left = leftDefaultValue + '%' : '';
                                    }
                                    break;
                                }
                            case '187':
                                {
                                    if (event.ctrlKey) {
                                        handledImageContainer.style.width = parseInt(handledImageContainer.style.width.match(/\d+/)) + 1 + '%';
                                    }
                                    break;
                                }

                            case '189':
                                {
                                    if (event.ctrlKey) {
                                        handledImageContainer.style.width = parseInt(handledImageContainer.style.width.match(/\d+/)) - 1 + '%';
                                    }
                                    break;
                                }
                        }
                    },

                    handler: function(e) {
                        var _e = e || event,
                            executable,
                            _ex = e.target,
                            subRoutine = function(eventType) {

                                var OpacityDivToBody = document.getElementById('OpacityDivToBody');
                                if (OpacityDivToBody) {
                                    OpacityDivToBody.parentNode.removeChild(OpacityDivToBody);
                                }
                                if (document.querySelector('#main') && document.querySelector('#handledImageContainer')) {
                                    document.querySelector('#main').removeChild(document.querySelector('#handledImageContainer'));
                                }

                                _u(_ex, eventType, _config.handler);
                                _u(document, event.type, _config.scroller);
                                _u(window, eventType, _config.handler);

                                var a = {};
                                a[eventType.toString()] = 0;
                                s(targetEl.alt, a);
                            };

                        if (_e.type === 'keyup' | 'onkeyup') {
                            executable = function() {
                                if (_e.keyCode.toString() === '27') {
                                    subRoutine(_e.type);
                                }
                            };
                        } else if (_e.type === 'click' | 'onclick') {
                            executable = function() {
                                subRoutine(_e.type);
                            };
                        }
                        executable();
                    },

                    handleImageContainer: function() {
                        if (targetEl) {
                            if (!document.getElementById('handledImageContainer')) {

                                var _el = _config.documentCreateElement('div', 'handledImageContainer', [{
                                        'display': 'block'
                                    }, {
                                        'width': _g(targetEl.alt, '', '', '', 1) + '%'
                                    }, {
                                        'position': 'fixed'
                                    }, {
                                        'zIndex': '10001'
                                    }, {
                                        'top': '5%'
                                    }, {
                                        'background': '#FFF'
                                    }, {
                                        'text-align': 'center'
                                    }, {
                                        'left': _g(targetEl.alt, '', '', '', '', 1) + '%'
                                    }]),
                                    _ex = _config.documentCreateElement('div', '', [{
                                        'background-image': "url('https://maxymiserbpos.sharepoint.com/sites/ua/training/Shared%20Documents/InductionAssets/close.png')"
                                    }, {
                                        'position': 'absolute'
                                    }, {
                                        'display': 'inline-block'
                                    }, {
                                        'background-repeat': 'no-repeat'
                                    }, {
                                        'cursor': 'pointer'
                                    }, {
                                        'height': '45px'
                                    }, {
                                        'width': '40px'
                                    }, {
                                        'padding-left': '1%'
                                    }, {
                                        'background-size': '100% 100%'
                                    }, {
                                        'background-position-x': '-4px'
                                    }, {
                                        'background-position-y': '-7px'
                                    }], ''),
                                    imgClone,
                                    mousewheelEvt = (/Firefox/i.test(navigator.userAgent)) ? "DOMMouseScroll" : "mousewheel";

                                imgClone = targetEl.cloneNode();
                                imgClone.style.width = '95%';
                                imgClone.style.marginLeft = '0';
                                imgClone.style.paddingTop = '8px';

                                document.getElementById('main').appendChild(_el);
                                _el.appendChild(imgClone);
                                _el.appendChild(_ex);

                                if (!_g(targetEl.alt)['mousewheelEvt']) {
                                    s(targetEl.alt, {
                                        'mousewheelEvt': 1
                                    });
                                    _e(document, mousewheelEvt, _config.scroller);
                                }

                                s(targetEl.alt, {
                                    'click': 1
                                });

                                _e(_ex, 'click', function(e) {
                                    _config.handler(e);
                                });

                                if (!_g(targetEl.alt)['keyup']) {
                                    s(targetEl.alt, {
                                        'keyup': 1
                                    });
                                    _e(window, 'keyup', function(e) {
                                        _config.handler(e);
                                    });
                                }

                                if (!_g(targetEl.alt)['arrowPress']) {
                                    s(targetEl.alt, {
                                        'arrowPress': 1
                                    });
                                    _e(window, 'keydown', _config.arrowPress);
                                }

                                if (!document.querySelector('#OpacityDivToBody')) {
                                    _config.appendOpacityDivToBody();
                                }
                            }
                        }
                    },
                    onclickHandler: function() {
                        _config.handleImageContainer();
                    }
                };

                return {
                    o: _config.onclickHandler
                }
            }
        };

        return {
            d: config.domReady,
            e: config.eventsBinder,
            u: config.eventsUnbinder,
            s: config.setter,
            g: config.getter,
            F: config.constructor
        }
    };

    var config = new Config();
    config.g().forEach(function(i) {
        var img = new Image(),
            parent = document.querySelector('#' + i);
        img.alt = i;
        img.src = config.g(i, '', 1);
        img.style.cursor = 'pointer';
        img.style.width = config.g(i, '', '', 1);
        parent ? parent.appendChild(img) : null;
    });

    config.e(document, 'click', function(e) {
        var event = e || event,
            target = event.target || event.srcElement;
        if ((target.tagName === 'IMG' && config.g(target.alt))) {
            if (!config.g(target.alt, 1)) {
                var _config = new config.F(target, config.e, config.g, config.s, config.u);
                config.s(target.alt, '', _config);
            }
            if (config.g(target.alt, 1)) {
                config.g(target.alt, 1).o();
            }
        }
    });
</script>


<div id="main" style="font-size: 10pt; font-family: arial, helvetica, sans-serif;">
    <div style="margin-left: auto; margin-right: auto; border: 1px solid white; width: 98%;">
        <table style="width: 100%; border: 2px; margin-left: auto; margin-right: auto; font-size: 16px;">
            <tbody>
                <tr>
                    <th valign="middle" style="height: 2em; font-weight: bold; border: 1px solid white; text-align: center; color:#900000; padding: 1px;   vertical-align: middle;">Access to SharePoint Web Interface</th>
                </tr>
                <tr>
                </tr>
            </tbody>
        </table>
    </div>

    <div style="margin-left: auto; margin-right: auto; height: 2em; font-size: 16px; color: #333399; width: 98%; text-align: center;">
        <div style="margin-top: 0.5em;">Assets Uploading to Akamai - CDN</div>
    </div>

    <div style="margin-left: auto; margin-right: auto; border: 1px solid #6690bc; width: 98%; text-align: center;">
        <span style="text-align: center; line-height: 30px; color: #6690bc; font-size: 17px;">Step 1</span>
        <table style="margin: 0px auto; width: 94%;">
            <tbody>
                <tr>
                    <td colspan="3" style="width: 28px; text-align: left; padding-left: 30px;">
                        <p>
                            <span style="line-height: 1.5em; color: #000000; font-size: 10pt;
 ">'<strong>Image Uploader</strong>' is the functionality of Maxymiser User Interface designed for uploading within the limit of maximum 5-7 image assets. 
 
 </span> </p>
                        <p>
                            <span style="line-height: 1.5em; color: #000000; font-size: 10pt;
 ">'<strong>Image Uploader</strong>' will be described further into the Induction Plan materials. 
 For multiple upload above the 5-6 image assets limit, follow through the Network Drive Mapping as described below.</p>

 <p>
                            <span style="line-height: 1.5em; color: #000000; font-size: 10pt; color: red;">NB! Full functionality of SharePoint web interface is supported by IE10 only. It is highly recommended you should install IE10 before proceeding.</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <p>
        </p>
    </div> 
	
	<div style="margin-left: auto; margin-right: auto; border: 1px solid #6690bc; width: 98%; text-align: center;">
        <span style="text-align: center; line-height: 30px; color: #6690bc; font-size: 17px;">Step 2</span>
                            <table style="margin: 0px auto; width: 94%;">
                                <tbody>
                                    <tr>
                                        <td colspan="3" style="width: 28px; text-align: left; padding-left: 30px;">
                                            <p>
<span style="line-height: 1.5em; color: #000000; font-size: 10pt;">1. Log in to </span>(<a href="http://office365.com/" style="text-align: justify; line-height: 1.5em;">http://office365.com</a>) <span style="color: #000000; line-height: 1.5em; font-size: 10pt;">under your maxymiser.com credentials.</span> </p>
	<p>
<span style="line-height: 1.5em; color: #000000; font-size: 10pt;">2. Make sure the 'Keep me signed in' box is checked. Proceed to the 'Team site', as shown on the screenshot below:</span></p>
 <p style="margin-left: 30px;">
            <span style="color: #000000; font-size: 10pt; color: #339;">Click Images to Enlarge</span>
                                            </p>
                                            <div id="teamSite_SP" style="text-align: center;"></div>
                                            <p>
                                                <span style="line-height: 1.5em; color: #000000; font-size: 10pt;">3. Click on the GTS, as shown below:</span</p>
			<div id="GTS_teamSite" style="text-align: center;"></div>
			<p>
                            <span style="line-height: 1.5em; color: #000000; font-size: 10pt;">4. Proceed to the 'Documents' section, as shown below, the following page will open up to the documents with a possibility to create a 'new document':</span></p>
				<div id="docs1" style="text-align: center;"></div>
				<p>
                            <span style="line-height: 1.5em; color: #000000; font-size: 10pt;
 ">5. It is possible to open the directory of the documents with Explorer, as shown below:</span></p>
 <div id="openwithEx" style="text-align: center;"></div>
 <p>
                            <span style="line-height: 1.5em; color: #000000; font-size: 10pt;
 ">6. After the directory opens to the Explorer view, it is possible to map the network directory, as shown below (on the 'Map Network Drive' screen, pls., signify this path: <span style="color: #0072C6;">\\maxymiserbpos.sharepoint.com@SSL\DavWWWRoot\teams\gts\Documents\AkamaiCDN)</span>.</p>
<div id="Mapping_via" style="text-align: center;"></div>
                    </td>
                </tr>
            </tbody>
        </table>
        <p>
        </p>
    </div> 
 </div>
</div>